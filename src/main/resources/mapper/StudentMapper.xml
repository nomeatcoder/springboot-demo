<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nomeatcoder.demo.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="cn.nomeatcoder.demo.domain.Student">
        <id column="id" property="id"/>
        <result column="age" property="age"/>
        <result column="gender" property="gender"/>
        <result column="name" property="name"/>
        <result column="create_time" property="createTime"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, age, gender, name, create_time, modified_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from student
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="cn.nomeatcoder.demo.domain.Student">
        insert into student (id, age, gender,
          name, create_time, modified_time
          )
        values (#{id,jdbcType=BIGINT}, #{age,jdbcType=INTEGER}, #{gender,jdbcType=TINYINT},
          #{name,jdbcType=VARCHAR}, now(),now()
          )
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="cn.nomeatcoder.demo.domain.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="name != null">
                name,
            </if>
            create_time,
            modified_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=TINYINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            now(),
            now(),
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.nomeatcoder.demo.domain.Student">
        update student
        <set>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=TINYINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            modified_time = now(),
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.nomeatcoder.demo.domain.Student">
        update student
        set age = #{age,jdbcType=INTEGER},
          gender = #{gender,jdbcType=TINYINT},
          name = #{name,jdbcType=VARCHAR},
          modified_time = now()
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="findAll" resultMap="BaseResultMap">
        select * from student
    </select>
    <select id="find" resultMap="BaseResultMap" parameterType="cn.nomeatcoder.demo.domain.StudentQuery">
        select * from student
        <where>
            <choose>
                <when test="id != null">
                    and id = #{id}
                </when>
                <otherwise>
                    <if test="age != null">
                        and age = #{age,jdbcType=INTEGER}
                    </if>
                    <if test="gender != null">
                        and gender = #{gender,jdbcType=TINYINT}
                    </if>
                    <if test="name != null">
                        and name = #{name,jdbcType=VARCHAR}
                    </if>
                    <if test="ids != null">
                        and id in
                        <foreach collection="ids" item="id" open="(" close=")" separator=",">
                            #{id}
                        </foreach>
                    </if>
                </otherwise>
            </choose>
        </where>
    </select>
    <delete id="deleteBatch" parameterType="list">
        delete from student
        where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>